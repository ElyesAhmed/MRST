function [x, w, nq] = getQuadratureRule(degree, dim)

    switch dim
        case 1
            
            degree = degree + (degree == 0);
            l  = legendrePolynomials(degree);
            dl = cellfun(@(l) dx(l,1), l, 'unif', false);
            dl = dl{end};
            
            if degree <= 1
                x = 0;
                
            elseif degree == 2
                x = [-sqrt(1/3); sqrt(1/3)];
                
            elseif degree == 3
                x = [-sqrt(3/5); 0; sqrt(3/5)];
                
            elseif degree == 4
                x = [-sqrt(3/7 + 2/7*sqrt(6/5)); -sqrt(3/7 - 2/7*sqrt(6/5)); ...
                      sqrt(3/7 - 2/7*sqrt(6/5));  sqrt(3/7 + 2/7*sqrt(6/5))];
                
            end
            
            w = 2./((1 - x.^2).*dl(x).^2);
            
%             if degree <= 3
%                 x = [-1; 0; 1];
%                 degree = 3;
% 
%             elseif degree <= 4
%                 x = [-1; -sqrt(5)/5; sqrt(5)/5; 1];
%                 degree = 4;    
% 
%             elseif degree <= 5
%                 x = [-1; -sqrt(21)/7; 0; sqrt(21)/7; 1];
% 
%             elseif degree <= 6
%                 x = [-1; sqrt(1/21*(7+2*sqrt(7))); sqrt(1/21*(7-2*sqrt(7))); ...
%                          sqrt(1/21*(7-2*sqrt(7))); sqrt(1/21*(7+2*sqrt(7))); 1];
%                 degree = 6;
% 
%             end

%             w = 2./(degree*(degree-1)*legendre(x, degree-1).^2);
            
        case 2
            
            if degree <= 1
                w = 1;
                x = [0,0];
            
            elseif degree == 2
                w = [1;1;1]/3;
                x = [0,1,1; 1,0,1; 1,1,0]/2;
                
            elseif degree <= 4
%                 w = 

                w = [0.22338158967801;
                     0.22338158967801;
                     0.22338158967801;
                     0.10995174365532;
                     0.10995174365532;
                     0.10995174365532];
                 
                x = [0.108103018168060   0.445948490915970   0.445948490915970;
                     0.445948490915960   0.445948490915970   0.108103018168070;
                     0.445948490915960   0.108103018168070   0.445948490915970;
                     0.816847572980460   0.091576213509770   0.091576213509770;
                     0.091576213509770   0.091576213509770   0.816847572980460;
                     0.091576213509770   0.816847572980460   0.091576213509770];
                 
%                 x = [0.44594849091597, 0.44594849091597;
%                      0.44594849091597, 0.10810301816807;
%                      0.10810301816807, 0.44594849091597;
%                      0.09157621350977, 0.09157621350977;
%                      0.09157621350977, 0.81684757298046;
%                      0.81684757298046, 0.09157621350977];
%                  
%                 xt = [0, 0; 1, 0; 0 1];
%                 
%                 T = [xt(1,:) - xt(3,:); xt(2,:) - xt(3,:)];
%                 l = (x - xt(3,:))/T;
%                 l = [l, 1-sum(l,2)];
            elseif degree <= 6
                
x = [0.24928674517091;
0.24928674517091;
0.50142650965818;
0.06308901449150;
0.06308901449150;
0.87382197101700;
0.31035245103378;
0.63650249912140;
0.05314504984482;
0.63650249912140;
0.31035245103378;
0.05314504984482];

y = [0.24928674517091;
0.50142650965818;
0.24928674517091;
0.06308901449150;
0.87382197101700;
0.06308901449150;
0.63650249912140;
0.05314504984482;
0.31035245103378;
0.31035245103378;
0.05314504984482;
0.63650249912140];

w = [0.11678627572638;
0.11678627572638;
0.11678627572638;
0.05084490637021;
0.05084490637021;
0.05084490637021;
0.08285107561837;
0.08285107561837;
0.08285107561837;
0.08285107561837;
0.08285107561837;
0.08285107561837];

                
                
            end
            
    end
    
    nq = numel(w);
    
end

% function p = legendre(x, l)
% 
%     p = 0;
%     
%     for k = 0:floor(l/2)
%         p = p + (-1).^k.*nchoosek(l, k)*nchoosek(2*l-2*k, l)*x.^(l-2*k);
%     end
%     p = p./(2^l);
%     
% end