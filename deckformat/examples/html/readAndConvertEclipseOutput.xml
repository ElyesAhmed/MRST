<?xml version="1.0" encoding="utf-8"?>
<mscript xmlns:mwsh="http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd">
   <version>9.5</version>
   <release>2018b</release>
   <date>2020-06-03</date>
   <cell>
      <count>1</count>
      <steptitle>Read ECLIPSE output and convert to MRST grid and solution structures</steptitle>
      <text>
         <p>This example reads ECLIPSE unformatted output files from a simulation based on the SPE-9 benchmark. The MRST grid structure (G) is generated using output from *.INIT and *.EGRID. The solution structure (states and <tt>states{i}.wellSol</tt>) are generated using output from *.UNRST.</p>
      </text>
      <mcode>mrstModule add mrst-gui ad-core

if ~ makeSPE9OutputAvailable
   error('SPE9Download:Failure', ...
         'Failed to download ECLIPSE output for SPE-9 benchmark case');
end

prefix = fullfile(getDatasetPath('spe9'), 'Simulation-Output', 'SPE9_CP');</mcode>
      <mcode-xmlized>
         <mwsh:code xml:space="preserve">mrstModule <mwsh:strings xml:space="preserve">add</mwsh:strings> <mwsh:strings xml:space="preserve">mrst-gui</mwsh:strings> <mwsh:strings xml:space="preserve">ad-core</mwsh:strings>

<mwsh:keywords xml:space="preserve">if</mwsh:keywords> ~ makeSPE9OutputAvailable
   error(<mwsh:strings xml:space="preserve">'SPE9Download:Failure'</mwsh:strings>, <mwsh:keywords xml:space="preserve">...</mwsh:keywords>
         <mwsh:strings xml:space="preserve">'Failed to download ECLIPSE output for SPE-9 benchmark case'</mwsh:strings>);
<mwsh:keywords xml:space="preserve">end</mwsh:keywords>

prefix = fullfile(getDatasetPath(<mwsh:strings xml:space="preserve">'spe9'</mwsh:strings>), <mwsh:strings xml:space="preserve">'Simulation-Output'</mwsh:strings>, <mwsh:strings xml:space="preserve">'SPE9_CP'</mwsh:strings>);</mwsh:code>
      </mcode-xmlized>
      <mcode-count>1</mcode-count>
      <cellOutputTarget>1</cellOutputTarget>
   </cell>
   <cell>
      <count>2</count>
      <steptitle>Read INIT/EGRID-files and generate MRST-grid</steptitle>
      <mcode>init  = readEclipseOutputFileUnFmt([prefix, '.INIT']);
egrid = readEclipseOutputFileUnFmt([prefix, '.EGRID']);
[G, rock] = eclOut2mrst(init, egrid);
G = computeGeometry(G);</mcode>
      <mcode-xmlized>
         <mwsh:code xml:space="preserve">init  = readEclipseOutputFileUnFmt([prefix, <mwsh:strings xml:space="preserve">'.INIT'</mwsh:strings>]);
egrid = readEclipseOutputFileUnFmt([prefix, <mwsh:strings xml:space="preserve">'.EGRID'</mwsh:strings>]);
[G, rock] = eclOut2mrst(init, egrid);
G = computeGeometry(G);</mwsh:code>
      </mcode-xmlized>
      <mcode-count>2</mcode-count>
      <cellOutputTarget>2</cellOutputTarget>
   </cell>
   <cell>
      <count>3</count>
      <steptitle>Restart-to-states converter reads selected parts of UNRST-file.</steptitle>
      <text>
         <p>Each state (states{i}) contains a 'wellSol' structure containing sufficient welldata for plotting (e.g., perforation cells).</p>
      </text>
      <mcode>states = convertRestartToStates(prefix, G);

% Fetch wellsols and restart-step times
wellSols = cellfun(@(x)x.wellSol, states, 'UniformOutput', false);
time     = cellfun(@(x)x.time, states);</mcode>
      <mcode-xmlized>
         <mwsh:code xml:space="preserve">states = convertRestartToStates(prefix, G);

<mwsh:comments xml:space="preserve">% Fetch wellsols and restart-step times</mwsh:comments>
wellSols = cellfun(@(x)x.wellSol, states, <mwsh:strings xml:space="preserve">'UniformOutput'</mwsh:strings>, false);
time     = cellfun(@(x)x.time, states);</mwsh:code>
      </mcode-xmlized>
      <mcode-count>3</mcode-count>
      <cellOutputTarget>3</cellOutputTarget>
   </cell>
   <cell>
      <count>4</count>
      <steptitle>Plot model with wells</steptitle>
      <mcode>figure, plotToolbar(G, states);
plotWellData(G, wellSols{1}, 'labelFontSize', 10, ...
             'color', [0.3, 0.3, 0.3]);
axis off vis3d tight, view([1, -0.5, 1]), camproj perspective</mcode>
      <mcode-xmlized>
         <mwsh:code xml:space="preserve">figure, plotToolbar(G, states);
plotWellData(G, wellSols{1}, <mwsh:strings xml:space="preserve">'labelFontSize'</mwsh:strings>, 10, <mwsh:keywords xml:space="preserve">...</mwsh:keywords>
             <mwsh:strings xml:space="preserve">'color'</mwsh:strings>, [0.3, 0.3, 0.3]);
axis <mwsh:strings xml:space="preserve">off</mwsh:strings> <mwsh:strings xml:space="preserve">vis3d</mwsh:strings> <mwsh:strings xml:space="preserve">tight</mwsh:strings>, view([1, -0.5, 1]), camproj <mwsh:strings xml:space="preserve">perspective</mwsh:strings></mwsh:code>
      </mcode-xmlized>
      <mcode-count>4</mcode-count>
      <cellOutputTarget>4</cellOutputTarget>
      <img src="readAndConvertEclipseOutput_01.png"/>
   </cell>
   <cell>
      <count>5</count>
      <steptitle>Plot well solutions for restart time-steps</steptitle>
      <mcode>plotWellSols(wellSols, time);</mcode>
      <mcode-xmlized>
         <mwsh:code xml:space="preserve">plotWellSols(wellSols, time);</mwsh:code>
      </mcode-xmlized>
      <mcode-count>5</mcode-count>
      <cellOutputTarget>5</cellOutputTarget>
      <img src="readAndConvertEclipseOutput_02.png"/>
   </cell>
   <cell>
      <count>6</count>
      <text>
         <p>
            <html text="&#xA;&lt;p&gt;&lt;font size=&#34;-1&#34;&gt;&#xA;Copyright 2009-2020 SINTEF Digital, Mathematics &amp; Cybernetics.&#xA;&lt;/font&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;font size=&#34;-1&#34;&gt;&#xA;This file is part of The MATLAB Reservoir Simulation Toolbox (MRST).&#xA;&lt;/font&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;font size=&#34;-1&#34;&gt;&#xA;MRST is free software: you can redistribute it and/or modify&#xA;it under the terms of the GNU General Public License as published by&#xA;the Free Software Foundation, either version 3 of the License, or&#xA;(at your option) any later version.&#xA;&lt;/font&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;font size=&#34;-1&#34;&gt;&#xA;MRST is distributed in the hope that it will be useful,&#xA;but WITHOUT ANY WARRANTY; without even the implied warranty of&#xA;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xA;GNU General Public License for more details.&#xA;&lt;/font&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;font size=&#34;-1&#34;&gt;&#xA;You should have received a copy of the GNU General Public License&#xA;along with MRST.  If not, see&#xA;&lt;a href=&#34;http://www.gnu.org/licenses/&#34;&gt;http://www.gnu.org/licenses&lt;/a&gt;.&#xA;&lt;/font&gt;&lt;/p&gt;&#xA;">
&lt;p&gt;&lt;font size="-1"&gt;
Copyright 2009-2020 SINTEF Digital, Mathematics &amp; Cybernetics.
&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="-1"&gt;
This file is part of The MATLAB Reservoir Simulation Toolbox (MRST).
&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="-1"&gt;
MRST is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="-1"&gt;
MRST is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="-1"&gt;
You should have received a copy of the GNU General Public License
along with MRST.  If not, see
&lt;a href="http://www.gnu.org/licenses/"&gt;http://www.gnu.org/licenses&lt;/a&gt;.
&lt;/font&gt;&lt;/p&gt;
</html>
         </p>
      </text>
      <cellOutputTarget>6</cellOutputTarget>
   </cell>
   <originalCode>%% Read ECLIPSE output and convert to MRST grid and solution structures
% This example reads ECLIPSE unformatted output files from a simulation
% based on the SPE-9 benchmark. The MRST grid structure (G) is generated
% using output from *.INIT and *.EGRID. The solution structure (states and
% |states{i}.wellSol|) are generated using output from *.UNRST.

mrstModule add mrst-gui ad-core

if ~ makeSPE9OutputAvailable
   error('SPE9Download:Failure', ...
         'Failed to download ECLIPSE output for SPE-9 benchmark case');
end

prefix = fullfile(getDatasetPath('spe9'), 'Simulation-Output', 'SPE9_CP');

%% Read INIT/EGRID-files and generate MRST-grid
init  = readEclipseOutputFileUnFmt([prefix, '.INIT']);
egrid = readEclipseOutputFileUnFmt([prefix, '.EGRID']);
[G, rock] = eclOut2mrst(init, egrid);
G = computeGeometry(G);

%% Restart-to-states converter reads selected parts of UNRST-file.
% Each state (states{i}) contains a 'wellSol' structure containing
% sufficient welldata for plotting (e.g., perforation cells). 
states = convertRestartToStates(prefix, G);

% Fetch wellsols and restart-step times
wellSols = cellfun(@(x)x.wellSol, states, 'UniformOutput', false);
time     = cellfun(@(x)x.time, states);

%% Plot model with wells
figure, plotToolbar(G, states);
plotWellData(G, wellSols{1}, 'labelFontSize', 10, ...
             'color', [0.3, 0.3, 0.3]);
axis off vis3d tight, view([1, -0.5, 1]), camproj perspective

%% Plot well solutions for restart time-steps
plotWellSols(wellSols, time);

%%
% &lt;html&gt;
% &lt;p&gt;&lt;font size="-1"&gt;
% Copyright 2009-2020 SINTEF Digital, Mathematics &amp; Cybernetics.
% &lt;/font&gt;&lt;/p&gt;
% &lt;p&gt;&lt;font size="-1"&gt;
% This file is part of The MATLAB Reservoir Simulation Toolbox (MRST).
% &lt;/font&gt;&lt;/p&gt;
% &lt;p&gt;&lt;font size="-1"&gt;
% MRST is free software: you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation, either version 3 of the License, or
% (at your option) any later version.
% &lt;/font&gt;&lt;/p&gt;
% &lt;p&gt;&lt;font size="-1"&gt;
% MRST is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
% &lt;/font&gt;&lt;/p&gt;
% &lt;p&gt;&lt;font size="-1"&gt;
% You should have received a copy of the GNU General Public License
% along with MRST.  If not, see
% &lt;a href="http://www.gnu.org/licenses/"&gt;http://www.gnu.org/licenses&lt;/a&gt;.
% &lt;/font&gt;&lt;/p&gt;
% &lt;/html&gt;
</originalCode>
   <m-file>readAndConvertEclipseOutput</m-file>
   <filename>/home/francesca/mrst-bitbucket/mrst-model-io/deckformat/examples/readAndConvertEclipseOutput.m</filename>
   <outputdir>/home/francesca/mrst-bitbucket/mrst-model-io/deckformat/examples/html</outputdir>
</mscript>