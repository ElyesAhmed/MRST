function buildMexOperators(varargin)
% Build MEX operators for automatic differentiation
    if mod(nargin, 2) == 1
        rebuild = varargin{1};
        varargin = varargin(2:end);
    else
        rebuild = false;
    end
    opt = struct('names', {{}});
    opt = merge_options(opt, varargin{:});
    if isempty(opt.names)
        names = {'mexDiscreteDivergenceJac', ...
                 'mexDiscreteDivergenceVal', ...
                 'mexDiscreteDivergenceBlockJac', ...
                 'mexDiagonalSparse',        ...
                 'mexFaceAverageDiagonalJac', ...
                 'mexSinglePointUpwindVal', ...
                 'mexSinglePointUpwindDiagonalJac', ...
                 'mexTwoPointGradientDiagonalJac', ...
                 'mexTwoPointGradientVal', ...
                 'mexDiagMult', ...
                 'mexDiagProductMult'};
    else
        names = opt.names;
        if ~iscell(names)
            names = {names};
        end
    end
    pth = fullfile(mrstPath('ad-core'), 'backends',...
                            'diagonal', 'operators', 'mex');

    buildMexExtensions(rebuild, names, pth);
end

