% run several different injection scenarios, each one being written to .mat
% file

% each case is run, and results are saved to .mat file
% then, results can be loaded separately for plotting

% IEAGHG grid, no modified properties
[opt, var, model, schedule, initState, wellSols, states, sim_report] = ...
    studySleipnerBenchmarkFUN( 'askBeforeSolver',   false, ...
                               'askBeforeSaving',   false );


% IEAGHG grid, modified properties: 3*k, 0.6*phi, 2/3*rhoCO2
[opt, var, model, schedule, initState, wellSols, states, sim_report] = ...
    studySleipnerBenchmarkFUN(  'modifyPerm',       true, ...
                                'modifyPoro',       true, ...
                                'modifyRhoCO2',     true, ...
                                'askBeforeSolver',  false, ...
                                'askBeforeSaving',  false );

% IEAGHG grid, 3*k only
[opt, var, model, schedule, initState, wellSols, states, sim_report] = ...
    studySleipnerBenchmarkFUN(  'modifyPerm',       true, ...
                                'askBeforeSolver',  false, ...
                                'askBeforeSaving',  false );


% IEAGHG grid, 0.6*phi only
[opt, var, model, schedule, initState, wellSols, states, sim_report] = ...
    studySleipnerBenchmarkFUN(  'modifyPoro',       true, ...
                                'askBeforeSolver',  false, ...
                                'askBeforeSaving',  false );


% IEAGHG grid, 2/3*rhoCO2 only
[opt, var, model, schedule, initState, wellSols, states, sim_report] = ...
    studySleipnerBenchmarkFUN(  'modifyRhoCO2',     true, ...
                                'askBeforeSolver',  false, ...
                                'askBeforeSaving',  false );
                            


                            
% GHGT grid, no modified properties
[opt, var, model, schedule, initState, wellSols, states, sim_report] = ...
    studySleipnerBenchmarkFUN(  'gridname',         'ORIGINALmodel', ...
                                'askBeforeSolver',  false, ...
                                'askBeforeSaving',  false );




% GHGT grid, modified properties: 3*k, 0.6*phi, 2/3*rhoCO2
[opt, var, model, schedule, initState, wellSols, states, sim_report] = ...
    studySleipnerBenchmarkFUN(  'gridname',         'ORIGINALmodel', ...
                                'modifyPerm',       true, ...
                                'modifyPoro',       true, ...
                                'modifyRhoCO2',     true, ...
                                'askBeforeSolver',  false, ...
                                'askBeforeSaving',  false );
                            

% GHGT grid, 3*k only
[opt, var, model, schedule, initState, wellSols, states, sim_report] = ...
    studySleipnerBenchmarkFUN(  'gridname',         'ORIGINALmodel', ...
                                'modifyPerm',       true, ...
                                'askBeforeSolver',  false, ...
                                'askBeforeSaving',  false );
                            

% GHGT grid, 0.6*phi only
[opt, var, model, schedule, initState, wellSols, states, sim_report] = ...
    studySleipnerBenchmarkFUN(  'gridname',         'ORIGINALmodel', ...
                                'modifyPoro',       true, ...
                                'askBeforeSolver',  false, ...
                                'askBeforeSaving',  false );
                           

% GHGT grid, 2/3*rhoCO2 only
[opt, var, model, schedule, initState, wellSols, states, sim_report] = ...
    studySleipnerBenchmarkFUN(  'gridname',         'ORIGINALmodel', ...
                                'modifyRhoCO2',     true, ...
                                'askBeforeSolver',  false, ...
                                'askBeforeSaving',  false );


% ref = [2, 3, 4, 6];
% 
% for i=1:numel(ref)
% 
% % IEAGHG model grid
% studySleipnerBenchmarkFUN('mycase','useIEAGHG_model', 'refineLevel',ref(i));
% 
% % studySleipnerBenchmarkFUN('mycase','useIEAGHG_model', 'refineLevel',ref(i), ...
% %     'mod_rock_perm', true);
% % 
% % studySleipnerBenchmarkFUN('mycase','useIEAGHG_model', 'refineLevel',ref(i), ...
% %     'mod_rock_poro', true);
% % 
% % studySleipnerBenchmarkFUN('mycase','useIEAGHG_model', 'refineLevel',ref(i), ...
% %     'mod_rhoCO2', true);
% 
% studySleipnerBenchmarkFUN('mycase','useIEAGHG_model', 'refineLevel',ref(i), ...
%     'mod_rock_perm', true, 'mod_rock_poro', true, 'mod_rhoCO2', true);
% 
% 
% % Original model grid
% studySleipnerBenchmarkFUN('mycase','useOriginal_model', 'refineLevel',ref(i));
% 
% % studySleipnerBenchmarkFUN('mycase','useOriginal_model', 'refineLevel',ref(i), ...
% %     'mod_rock_perm', true);
% % 
% % studySleipnerBenchmarkFUN('mycase','useOriginal_model', 'refineLevel',ref(i), ...
% %     'mod_rock_poro', true);
% % 
% % studySleipnerBenchmarkFUN('mycase','useOriginal_model', 'refineLevel',ref(i), ...
% %     'mod_rhoCO2', true);
% 
% studySleipnerBenchmarkFUN('mycase','useOriginal_model', 'refineLevel',ref(i), ...
%     'mod_rock_perm', true, 'mod_rock_poro', true, 'mod_rhoCO2', true);
% 
% end
