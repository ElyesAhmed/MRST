%% Upper bound trapping capacities: Norwegian Continental Shelf formations

%% Specify the formations to study
% We list the formations explicity since some formations are sealing or its
% grid may not be generated by getAtlasGrid()

%names = [getNorwegianSeaNames() getBarentsSeaNames()];
names = {'Garnfm';'Ilefm';'Tiljefm';'Arefm';'Bjarmelandfm';'Stofm';'Tubaenfm'};
fmCapacities = cell(numel(names),1);

for i = 1:numel(names)
   
    fmCapacities{i} = getTrappingInfo(names{i}, 1, 'plotsOn',false);
    
end


%% Create table of trapping output

fprintf('Name & Structural & Residual & Dissolved & Total in Gt \\\\ \n')
for i = 1:numel(names)
    
    x = fmCapacities{i}.breakdown;
    fprintf('%15s & %8.2f (%5.1f) & %8.2f (%5.1f) & %8.2f (%5.1f) & %8.2f \\\\ \n', names{i}, ...
        x.structural_trapping_capacity, (x.structural_trapping_capacity/x.total_trapping_capacity)*100, ...
        x.residual_trapping_capacity, (x.residual_trapping_capacity/x.total_trapping_capacity)*100, ...
        x.dissolved_trapping_capacity, (x.dissolved_trapping_capacity/x.total_trapping_capacity)*100, ...
        x.total_trapping_capacity );
    
end
    
%% Create table of parameter values used to compute trapping capacities

info = getSeaInfo('NorwegianSea', 760 * kilogram/meter^3);

fprintf('Norwegian Sea Parameter Values \n')
fprintf('Parameter                  & Value     & Unit & Reference \\\\ \n')
fprintf('Sea depth                  & %d        & meter & \\\\ \n', getfield(info,'seafloor_depth')*meter)
fprintf('Injection depth            & %d        &       & \\\\ \n', [])
fprintf('Thermal gradient           & %4.1f     & C/km  & \\\\ \n', getfield(info,'temp_gradient'))
fprintf('Seabed temperature         & %d        & C     & \\\\ \n', getfield(info,'seafloor_temp'))
fprintf('Residual water saturation  & %4.2f     &       & \\\\ \n', getfield(info,'res_sat_wat'))
fprintf('Residual {\\co} saturation  & %4.2f     &       & \\\\ \n', getfield(info,'res_sat_co2'))
fprintf('Rock porosity              & %d        &       & \\\\ \n', [])
fprintf('Rock net-to-gross          & %d        &       & \\\\ \n', [])
fprintf('Water density              & %d        & kg/m^3 & \\\\ \n', getfield(info,'water_density')*kilogram/meter^3)
fprintf('{\\co} solubility in brine  & %d        & kg/m^3 & \\\\ \n', getfield(info,'co2_solubility')*kilogram/meter^3)


info = getSeaInfo('BarentsSea', 760 * kilogram/meter^3);

fprintf('Barents Sea Parameter Values \n')
fprintf('Parameter                  & Value     & Unit & Reference \\\\ \n')
fprintf('Sea depth                  & %d        & meter & \\\\ \n', getfield(info,'seafloor_depth')*meter)
fprintf('Injection depth            & %d        &       & \\\\ \n', [])
fprintf('Thermal gradient           & %4.1f     & C/km  & \\\\ \n', getfield(info,'temp_gradient'))
fprintf('Seabed temperature         & %d        & C     & \\\\ \n', getfield(info,'seafloor_temp'))
fprintf('Residual water saturation  & %4.2f     &       & \\\\ \n', getfield(info,'res_sat_wat'))
fprintf('Residual {\\co} saturation  & %4.2f     &       & \\\\ \n', getfield(info,'res_sat_co2'))
fprintf('Rock porosity              & %d        &       & \\\\ \n', [])
fprintf('Rock net-to-gross          & %d        &       & \\\\ \n', [])
fprintf('Water density              & %d        & kg/m^3 & \\\\ \n', getfield(info,'water_density')*kilogram/meter^3)
fprintf('{\\co} solubility in brine  & %d        & kg/m^3 & \\\\ \n', getfield(info,'co2_solubility')*kilogram/meter^3)
